{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\Desktop\\\\Work\\\\React\\\\todo\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Todotable from \"./components/Todotable.js\";\nimport Additemform from \"./components/Additemform.js\";\nimport NavBar from \"./components/NavBar.js\";\nimport { UContext } from \"./index.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    setguest,\n    completedstyle,\n    ongoingstyle,\n    expiredstyle,\n    guest\n  } = useContext(UContext);\n  const navigate = useNavigate();\n  const [currentuser, setcurrentuser] = useState(\"\");\n  const [popup, setpopup] = useState(false);\n  const [Name, setname] = useState(\"\");\n  const [desc, setdesc] = useState(\"\");\n  const [time, settime] = useState(\"\");\n  const [items, setitems] = useState([]);\n  const [completedItems, setCompletedItems] = useState([]);\n  const [expiredItems, setExpiredItems] = useState([]);\n  const Datenow = () => new Date().toJSON();\n  useEffect(() => {\n    if (guest) {\n      var storeditem = JSON.parse(localStorage.getItem(\"items\"));\n      var storedcompleted = JSON.parse(localStorage.getItem(\"citems\"));\n      var storedeitems = JSON.parse(localStorage.getItem(\"eitems\"));\n      if (storeditem) {\n        setitems(storeditem);\n      }\n      if (storedcompleted) {\n        setCompletedItems(storedcompleted);\n      }\n      if (storedeitems) {\n        setExpiredItems(storedeitems);\n      }\n    } else {\n      getitems();\n    }\n    async function getitems() {\n      var storedeitems = await axios.post('/getsetitems', {\n        itemtype: 'expired',\n        mode: 'get'\n      });\n      var storeditem = await axios.post('/getsetitems', {\n        itemtype: 'current',\n        mode: 'get'\n      });\n      var storedcompleted = await axios.post('/getsetitems', {\n        itemtype: 'completed',\n        mode: 'get'\n      });\n    }\n    if (storeditem) {\n      setitems(storeditem);\n    }\n    if (storedcompleted) {\n      setCompletedItems(storedcompleted);\n    }\n    if (storedeitems) {\n      setExpiredItems(storedeitems);\n    }\n  });\n  useEffect(() => {\n    if (guest) {\n      if (items.length != 0) localStorage.setItem(\"items\", JSON.stringify(items));\n      if (completedItems.length != 0) localStorage.setItem(\"citems\", JSON.stringify(completedItems));\n      if (expiredItems.length != 0) localStorage.setItem(\"eitems\", JSON.stringify(expiredItems));\n    } else {\n      //set items \n      if (items.length != 0) axios.post('/getsetitems', {\n        itemtype: 'expired',\n        item: expiredItems,\n        mode: 'set'\n      });\n      if (completedItems.length != 0) axios.post('/getsetitems', {\n        itemtype: 'completed',\n        item: completedItems,\n        mode: 'set'\n      });\n      if (expiredItems.length != 0) axios.post('/getsetitems', {\n        itemtype: 'current',\n        item: items,\n        mode: 'set'\n      });\n    }\n  }, [items, completedItems, expiredItems]);\n  useEffect(() => {\n    items.forEach((item, i) => {\n      let k = new Date(item.time).getTime();\n      let h = new Date().getTime();\n      if (k <= h) {\n        let temp = [...expiredItems, items[i]];\n        setExpiredItems(temp);\n        handledelete(i, 'current-item');\n      }\n    });\n  }, [items]);\n  function handledone(index) {\n    // Move the completed item to the completedItems array\n    let completedItem = items[index];\n    completedItem.currentdate = Datenow();\n    setCompletedItems([...completedItems, completedItem]);\n\n    // Remove the completed item from the items array\n    setitems(items.filter((_, i) => i !== index));\n  }\n  function handledelete(index, mode) {\n    if (mode == \"current-task\") {\n      const temp = items.filter((item, i) => i !== index);\n      setitems(temp);\n    }\n    if (mode == \"expired-task\") {\n      const temp = expiredItems.filter((item, i) => i !== index);\n      setExpiredItems(temp);\n    }\n    if (mode == \"completed-task\") {\n      const temp = completedItems.filter((item, i) => i !== index);\n      setCompletedItems(temp);\n    }\n  }\n  function handleadd() {\n    setpopup(false);\n    let currentdate = Datenow();\n    let hour = currentdate.split('T')[1].slice(0, 5);\n    currentdate = currentdate.slice(0, 10);\n    currentdate = currentdate + ' ' + hour;\n    // Trim and validate inputs\n    let trimmedDesc = desc.trim();\n    if (trimmedDesc === \"\") {\n      trimmedDesc = \"No Description\";\n    }\n    if (Name.trim() === \"\" || time.trim() === \"\") {\n      alert(\"Please fill in all fields.\");\n      return; // Exit if validation fails\n    }\n    const newItem = {\n      Name: Name.trim(),\n      desc: trimmedDesc,\n      time: time.trim(),\n      currentdate\n    };\n    setitems(items => [...items, newItem]);\n\n    // Clear input fields\n    setname(\"\");\n    setdesc(\"\");\n    settime(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {\n        setpopup: setpopup,\n        username: currentuser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Todotable, {\n        mode: \"current-task\",\n        items: items,\n        handleit: handledone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Todotable, {\n        mode: \"completed-task\",\n        items: completedItems,\n        handleit: handledelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Todotable, {\n        mode: \"expired-task\",\n        items: expiredItems,\n        handleit: handledelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Additemform, {\n      popup: popup,\n      setpopup: setpopup,\n      Name: Name,\n      desc: desc,\n      time: time,\n      setdesc: setdesc,\n      setname: setname,\n      settime: settime,\n      handleadd: handleadd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"9LijjB9RTyyN3anyXbILKllmvwo=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useContext","useState","Link","useNavigate","axios","Todotable","Additemform","NavBar","UContext","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","setguest","completedstyle","ongoingstyle","expiredstyle","guest","navigate","currentuser","setcurrentuser","popup","setpopup","Name","setname","desc","setdesc","time","settime","items","setitems","completedItems","setCompletedItems","expiredItems","setExpiredItems","Datenow","Date","toJSON","storeditem","JSON","parse","localStorage","getItem","storedcompleted","storedeitems","getitems","post","itemtype","mode","length","setItem","stringify","item","forEach","i","k","getTime","h","temp","handledelete","handledone","index","completedItem","currentdate","filter","_","handleadd","hour","split","slice","trimmedDesc","trim","alert","newItem","children","className","username","fileName","_jsxFileName","lineNumber","columnNumber","handleit","_c","$RefreshReg$"],"sources":["C:/Users/moham/Desktop/Work/React/todo/client/src/App.js"],"sourcesContent":["import { useEffect, useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Todotable from \"./components/Todotable.js\";\n\nimport Additemform from \"./components/Additemform.js\";\nimport NavBar from \"./components/NavBar.js\";\n\nimport { UContext } from \"./index.js\";\n\nfunction App() {\n  const {setguest, completedstyle, ongoingstyle, expiredstyle, guest } = useContext(UContext);\n  const navigate = useNavigate();\n  const [currentuser, setcurrentuser] = useState(\"\");\n \n\n  \n\n\n  \n  const [popup, setpopup] = useState(false);\n  const [Name, setname] = useState(\"\");\n  const [desc, setdesc] = useState(\"\");\n  const [time, settime] = useState(\"\");\n  const [items, setitems] = useState([]);\n  const [completedItems, setCompletedItems] = useState([]);\n  const [expiredItems, setExpiredItems] = useState([]);\n  const Datenow = () => new Date().toJSON()\n\n  useEffect(()=>{\n    if(guest)\n    {\n    var storeditem =JSON.parse(localStorage.getItem(\"items\"))\n    var storedcompleted = JSON.parse(localStorage.getItem(\"citems\"))\n    var storedeitems = JSON.parse(localStorage.getItem(\"eitems\"))\n    if(storeditem){\n      setitems(storeditem)\n    }\n    if(storedcompleted){\n      setCompletedItems(storedcompleted)\n    }\n    if(storedeitems){\n      setExpiredItems(storedeitems)\n    }\n    }else{\n      getitems()\n    }\n    async function getitems() {\n      var storedeitems = await axios.post('/getsetitems',{itemtype: 'expired', mode: 'get'})\n      var storeditem = await axios.post('/getsetitems',{itemtype: 'current', mode: 'get'})\n      var storedcompleted = await axios.post('/getsetitems',{itemtype: 'completed', mode: 'get'})\n      \n    }\n    \n    if(storeditem){\n      setitems(storeditem)\n    }\n    if(storedcompleted){\n      setCompletedItems(storedcompleted)\n    }\n    if(storedeitems){\n      setExpiredItems(storedeitems)\n    }\n    })\n \n \n  useEffect(() => {\n        if(guest){\n          if(items.length != 0)\n            localStorage.setItem(\"items\", JSON.stringify(items))\n        if(completedItems.length != 0)\n          localStorage.setItem(\"citems\", JSON.stringify(completedItems))\n        if(expiredItems.length != 0)\n          localStorage.setItem(\"eitems\", JSON.stringify(expiredItems))\n        }else{ //set items \n          if(items.length != 0)\n          axios.post('/getsetitems',{itemtype: 'expired', item: expiredItems, mode: 'set'})\n          if(completedItems.length != 0)\n          axios.post('/getsetitems',{itemtype: 'completed', item: completedItems, mode: 'set'})\n          if(expiredItems.length != 0)\n          axios.post('/getsetitems',{itemtype: 'current', item: items, mode: 'set'})\n        }\n    }\n    ,[items,completedItems,expiredItems]\n  );\n\n  useEffect(()=>{\n    items.forEach((item , i) => {\n      let k = new Date(item.time).getTime()\n      let h = new Date().getTime()\n      if(k <= h){\n      let temp = [...expiredItems, items[i]]\n      setExpiredItems(temp)\n        handledelete(i, 'current-item')\n      }\n    });\n  }, [items])\n\n\n  function handledone(index) {\n    // Move the completed item to the completedItems array\n    let completedItem = items[index];\n    completedItem.currentdate = Datenow();\n\n    setCompletedItems([...completedItems, completedItem]);\n\n    // Remove the completed item from the items array\n    setitems(items.filter((_, i) => i !== index));\n  }\n \n\n  function handledelete(index, mode) {\n    if(mode == \"current-task\"){const temp = items.filter((item, i) => i !== index);  setitems(temp);}\n    if(mode == \"expired-task\"){const temp = expiredItems.filter((item, i) => i !== index);  setExpiredItems(temp);}\n    if(mode == \"completed-task\")\n   { const temp = completedItems.filter((item, i) => i !== index);  setCompletedItems(temp);}\n\n   \n  }\n  function handleadd() {\n    setpopup(false);\n    let currentdate = Datenow();\n    let hour = currentdate.split('T')[1].slice(0,5)\n    currentdate = currentdate.slice(0,10)\n    currentdate = currentdate + ' ' + hour\n    // Trim and validate inputs\n    let trimmedDesc = desc.trim();\n    if (trimmedDesc === \"\") {\n      trimmedDesc = \"No Description\";\n    }\n\n    if (Name.trim() === \"\" || time.trim() === \"\") {\n      alert(\"Please fill in all fields.\");\n      return; // Exit if validation fails\n    }\n\n    const newItem = {\n      Name: Name.trim(),\n      desc: trimmedDesc,\n      time: time.trim(),\n      currentdate,\n    };\n    setitems((items) => [...items, newItem]);\n\n    // Clear input fields\n    setname(\"\");\n    setdesc(\"\");\n    settime(\"\");\n  }\n\n  return (\n    <>\n      <div className=\"header\">\n        <NavBar setpopup={setpopup} username={currentuser}></NavBar>\n      </div>\n      <div className=\"App-header\">\n        <Todotable mode=\"current-task\" items={items} handleit={handledone} />\n        <Todotable\n          mode=\"completed-task\"\n          items={completedItems}\n          handleit={handledelete}\n        />\n        <Todotable\n          mode=\"expired-task\"\n          items={expiredItems}\n          handleit={handledelete}\n        />\n \n      </div>\n      <Additemform\n        popup={popup}\n        setpopup={setpopup}\n        Name={Name}\n        desc={desc}\n        time={time}\n        setdesc={setdesc}\n        setname={setname}\n        settime={settime}\n        handleadd={handleadd}\n      />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}