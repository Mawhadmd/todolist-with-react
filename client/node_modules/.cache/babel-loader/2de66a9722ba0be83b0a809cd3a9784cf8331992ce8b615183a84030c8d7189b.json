{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\Desktop\\\\Work\\\\React\\\\todo\\\\client\\\\src\\\\components\\\\Todotable.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport Todoitem from \"./Todoitem.js\";\nimport { UContext } from \"../index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todotable({\n  items,\n  handledone,\n  setpopup\n}) {\n  _s();\n  const [loadnow, setloadnow] = useState(true);\n  const {\n    ongoingstyle,\n    setongoingstyle,\n    expiredstyle,\n    completedstyle\n  } = useContext(UContext);\n  var expression = completedstyle.flex == 3 || expiredstyle.flex == 3;\n  useEffect(() => {\n    if (expression == false) {\n      setTimeout(() => {\n        etloadnow();\n      }, 500);\n    }\n  }, [expression]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todobox\",\n    style: {\n      justifyContent: items.length !== 0 ? \"start\" : \"center\",\n      ...ongoingstyle\n    },\n    children: [!expression && loadnow && items.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Todoitem, {\n        items: item,\n        handledone: () => handledone(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: expression ? {\n        textWrap: \"nowrap\",\n        transform: 'rotate(-90deg)',\n        top: 'calc(50% - 25px)'\n      } : {\n        top: '-10px'\n      },\n      className: \"boxHeader\",\n      children: \"Current Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), items.length === 0 && !expression ? /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"empty\",\n      className: \"Hidden\",\n      src: \"\\\\flat-icon-trash-can-flies-260nw-2127192293.png\",\n      style: {\n        width: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 43\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Todotable, \"bDdD0371Ik+5dvfZEynCGHEkZpI=\");\n_c = Todotable;\nvar _c;\n$RefreshReg$(_c, \"Todotable\");","map":{"version":3,"names":["useContext","useEffect","useState","Todoitem","UContext","jsxDEV","_jsxDEV","Todotable","items","handledone","setpopup","_s","loadnow","setloadnow","ongoingstyle","setongoingstyle","expiredstyle","completedstyle","expression","flex","setTimeout","etloadnow","className","style","justifyContent","length","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","textWrap","transform","top","alt","src","width","_c","$RefreshReg$"],"sources":["C:/Users/moham/Desktop/Work/React/todo/client/src/components/Todotable.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport Todoitem from \"./Todoitem.js\";\r\nimport { UContext } from \"../index.js\";\r\n\r\nexport default function Todotable({ items, handledone, setpopup }) {\r\n  const [loadnow,setloadnow] = useState(true)\r\n  const  {ongoingstyle, setongoingstyle, expiredstyle, completedstyle} = useContext(UContext)\r\n  var expression = (completedstyle.flex == 3 || expiredstyle.flex == 3) \r\n  useEffect(()=>{\r\n    if(expression == false){\r\n      setTimeout(() => {\r\n        etloadnow()\r\n      }, 500);\r\n    }\r\n    \r\n  }, [expression])\r\n  return (\r\n\r\n    <div\r\n      className=\"todobox\"\r\n      style={{ justifyContent: items.length !== 0 ? \"start\" : \"center\", ...ongoingstyle}}\r\n    >\r\n      {(!expression && loadnow) && items.map((item, index) => {\r\n        return (\r\n          <Todoitem\r\n            items={item}\r\n            handledone={() => handledone(index)}\r\n            key={index}\r\n          />\r\n        );\r\n      })}\r\n      <h1\r\n        style={expression? {textWrap: \"nowrap\", transform: 'rotate(-90deg)', top:'calc(50% - 25px)'}: {top: '-10px'}}\r\n        className=\"boxHeader\"\r\n      >\r\n        Current Tasks\r\n      </h1>\r\n      {items.length === 0 && !expression? <img alt=\"empty\" className=\"Hidden\" src=\"\\flat-icon-trash-can-flies-260nw-2127192293.png\" style={{width: '100px'}}/> : ''}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,OAAOC,QAAQ,MAAM,eAAe;AACpC,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,SAASA,CAAC;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjE,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAO;IAACY,YAAY;IAAEC,eAAe;IAAEC,YAAY;IAAEC;EAAc,CAAC,GAAGjB,UAAU,CAACI,QAAQ,CAAC;EAC3F,IAAIc,UAAU,GAAID,cAAc,CAACE,IAAI,IAAI,CAAC,IAAIH,YAAY,CAACG,IAAI,IAAI,CAAE;EACrElB,SAAS,CAAC,MAAI;IACZ,IAAGiB,UAAU,IAAI,KAAK,EAAC;MACrBE,UAAU,CAAC,MAAM;QACfC,SAAS,CAAC,CAAC;MACb,CAAC,EAAE,GAAG,CAAC;IACT;EAEF,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAChB,oBAEEZ,OAAA;IACEgB,SAAS,EAAC,SAAS;IACnBC,KAAK,EAAE;MAAEC,cAAc,EAAEhB,KAAK,CAACiB,MAAM,KAAK,CAAC,GAAG,OAAO,GAAG,QAAQ;MAAE,GAAGX;IAAY,CAAE;IAAAY,QAAA,GAEjF,CAACR,UAAU,IAAIN,OAAO,IAAKJ,KAAK,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACtD,oBACEvB,OAAA,CAACH,QAAQ;QACPK,KAAK,EAAEoB,IAAK;QACZnB,UAAU,EAAEA,CAAA,KAAMA,UAAU,CAACoB,KAAK;MAAE,GAC/BA,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAEN,CAAC,CAAC,eACF3B,OAAA;MACEiB,KAAK,EAAEL,UAAU,GAAE;QAACgB,QAAQ,EAAE,QAAQ;QAAEC,SAAS,EAAE,gBAAgB;QAAEC,GAAG,EAAC;MAAkB,CAAC,GAAE;QAACA,GAAG,EAAE;MAAO,CAAE;MAC7Gd,SAAS,EAAC,WAAW;MAAAI,QAAA,EACtB;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACJzB,KAAK,CAACiB,MAAM,KAAK,CAAC,IAAI,CAACP,UAAU,gBAAEZ,OAAA;MAAK+B,GAAG,EAAC,OAAO;MAACf,SAAS,EAAC,QAAQ;MAACgB,GAAG,EAAC,kDAAiD;MAACf,KAAK,EAAE;QAACgB,KAAK,EAAE;MAAO;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GAAG,EAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1J,CAAC;AAEV;AAACtB,EAAA,CApCuBJ,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}